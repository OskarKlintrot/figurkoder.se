name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - master

jobs:
  formatting_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Check Code Formatting
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check Prettier formatting
        run: |
          echo "üîç Checking code formatting with Prettier..."
          if ! npm run format:check; then
            echo ""
            echo "‚ùå Code formatting issues found!"
            echo ""
            echo "To fix formatting issues, run:"
            echo "  npm run format"
            echo ""
            echo "Or in PowerShell:"
            echo "  npm run format"
            echo ""
            exit 1
          fi
          echo "‚úÖ All files are properly formatted!"
        
      - name: Comment on PR if formatting fails
        if: failure() && (github.event_name == 'pull_request' && github.event.action != 'closed')
        uses: actions/github-script@v7
        with:
          script: |
            const message = `## ‚ùå Code Formatting Check Failed
            
            Your PR contains files that are not properly formatted according to Prettier rules.
            
            **To fix this:**
            1. Run \`npm run format\` in your local repository
            2. Commit and push the formatting changes
            
            **PowerShell command:**
            \`\`\`powershell
            npm run format
            git add .
            git commit -m "Fix code formatting"
            git push
            \`\`\`
            
            All code must be properly formatted before merging. This ensures consistent code style across the project.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

  test_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Run Playwright Tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright Browsers
        run: npx playwright install chromium --with-deps
        
      - name: Run Playwright tests
        run: npm run test
        
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report-pr
          path: |
            playwright-report/
            test-results/
          retention-days: 3
          
      - name: Comment PR with test results
        uses: actions/github-script@v7
        if: always() && (github.event_name == 'pull_request' && github.event.action != 'closed')
        with:
          script: |
            const conclusion = process.env.TESTS_CONCLUSION || '${{ job.status }}';
            const fs = require('fs');
            const path = require('path');
            let reportMessage = '';
            try {
              const reportPath = path.join(process.cwd(), 'test-results');
              if (fs.existsSync(reportPath)) {
                reportMessage = 'üß™ **Playwright Test Results**\n\n';
              } else {
                reportMessage = '‚ùì Test results not found.\n\n';
              }
            } catch (error) {
              reportMessage = `‚ùå Error reading test results: ${error.message}\n\n`;
            }
            let message;
            if (conclusion === 'success') {
              message = `‚úÖ All Playwright tests have run and passed!`;
            } else {
              message = `‚ùå Some Playwright tests failed!`;
            }
            const fullMessage = `${reportMessage}${message}\n\nSee the report: [Playwright Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: fullMessage
            });

  deploy_pr_job:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    name: Deploy PR
    uses: ./.github/workflows/build-and-deploy.yml
    with:
      app_location: "./src"
      api_location: ""
      output_location: "."
      skip_app_build: true
    secrets:
      AZURE_STATIC_WEB_APPS_API_TOKEN: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_HAPPY_FIELD_0F08C3A03 }}

  deploy_production_job:
    if: github.event_name == 'push'
    name: Deploy Production
    needs: [test_job, formatting_job]
    uses: ./.github/workflows/build-and-deploy.yml
    with:
      app_location: "./src"
      api_location: ""
      output_location: "."
      skip_app_build: true
    secrets:
      AZURE_STATIC_WEB_APPS_API_TOKEN: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_HAPPY_FIELD_0F08C3A03 }}

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_HAPPY_FIELD_0F08C3A03 }}
          action: "close"
