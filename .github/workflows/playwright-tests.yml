name: Playwright Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run Tests on PR
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright Browsers
        run: npx playwright install chromium --with-deps
        
      - name: Run Playwright tests
        env:
          # Optimize for CI performance with fast timeouts
          PWTEST_SKIP_TEST_OUTPUT: 1
        run: npx playwright test
        
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report-pr
          path: |
            playwright-report/
            test-results/
          retention-days: 3
          
      - name: Comment PR with test results
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const conclusion = process.env.TESTS_CONCLUSION || '${{ job.status }}';
            const fs = require('fs');
            const path = require('path');
            let reportMessage = '';
            try {
              const reportPath = path.join(process.cwd(), 'test-results');
              if (fs.existsSync(reportPath)) {
                reportMessage = 'üß™ **Playwright Test Results**\n\n';
              } else {
                reportMessage = '‚ùì Test results not found.\n\n';
              }
            } catch (error) {
              reportMessage = `‚ùå Error reading test results: ${error.message}\n\n`;
            }
            let message;
            if (conclusion === 'success') {
              message = `‚úÖ All Playwright tests have run and passed!`;
            } else {
              message = `‚ùå Some Playwright tests failed!`;
            }
            const fullMessage = `${reportMessage}${message}\n\nSee the report: [Playwright Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: fullMessage
            });